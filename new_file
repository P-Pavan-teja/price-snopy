def s3copy(bucket_name: str, old: str, new: str):
    """
    Copy the files from one folder to another folder with multipart upload support
    
    :param bucket_name: The name of the S3 bucket
    :param old: prefix of the source folder
    :param new: prefix of the destination folder
    :return: None
    """
    # Configure multipart settings
    config = boto3.s3.transfer.TransferConfig(
        multipart_threshold=5 * 1024 * 1024 * 1024,  # 5GB threshold
        max_concurrency=10,
        multipart_chunksize=256 * 1024 * 1024,  # 256MB per part
        use_threads=True
    )
    
    try:
        response = client_s3.list_objects_v2(Bucket=bucket_name, Prefix=old)
        keycount = response['KeyCount']
        if keycount > 0:
            for key in response['Contents']:
                file = key['Key']
                try:
                    output = file.split(old)
                    newfile = new + output[1]
                    input_source = {'Bucket': bucket_name, 'Key': file}
                    
                    # Check file size to determine copy method
                    if key['Size'] >= 5 * 1024 * 1024 * 1024:  # 5GB or larger
                        # Use multipart copy for large files
                        client_s3.copy(
                            CopySource=input_source,
                            Bucket=bucket_name,
                            Key=newfile,
                            Config=config
                        )
                    else:
                        # Use regular copy for smaller files
                        s3.Object(bucket_name, newfile).copy_from(CopySource=input_source)
                        
                except ClientError as e:
                    print(e.response['Error']['Message'])
        else:
            print('No matching records')
    except ClientError as e:
        print(e.response['Error']['Message'])
    else:
        print('Operation completed')
