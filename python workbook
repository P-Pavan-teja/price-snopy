import snowflake.snowpark as snowpark
from snowflake.snowpark.functions import col, current_date

def email(session: snowpark.Session, user: str, subject: str, body: str,
          name: str = None, lst_suc_log: str = None) -> bool:
    try:
        session.sql(
            "call SYSTEM$SEND_EMAIL('my_email_notification_integration', ?, ?, ?, 'text/html')",
            params=[user, subject, body]
        ).collect()
        return True
    except Exception:
        return False

def main(session: snowpark.Session):
    try:
        status = []
    
        users_view = session.table('SNOWFLAKE.ACCOUNT_USAGE.USERS').filter(
            (col('DELETED_ON').is_null()) &
            (col('NAME') != 'SNOWFLAKE') &
            (col('LAST_SUCCESS_LOGIN').cast("date") <= current_date() - 30)
        ).select(col('NAME'), col('EMAIL'), col('LAST_SUCCESS_LOGIN'))
    
        if users_view.limit(1).count() == 0:
            return "no users inactive > 30 days"

        for row in users_view.collect():
            user, name, lst_suc_log = row["EMAIL"], row["NAME"], row["LAST_SUCCESS_LOGIN"]
            user_subject = "ALERT: Inactive Snowflake Dev Account"
            user_body = f"""
            <html>
              <body>
                <p><b>Notice:</b></p>
                <p>Hello {name},</p>
                <p>Your Snowflake dev account has not logged in for more than <b>30 days</b> (last login: <b>{lst_suc_log}</b>).</p>
                <p>Please login at least once every 30 days to avoid losing access.</p>
                <br>
                <p>Thank you,<br>Snowflake Admin Team</p>
              </body>
            </html>
            """
    
    
            if not email(session, user, user_subject, user_body, name, lst_suc_log):
                status.append(user)
    
        if status:
            admin_email = "admin@example.com"
            admin_subject = "ALERT: Users inactive > 30 days"
            admin_body = f"""
            <html>
              <body>
                <p>The following users did not receive emails successfully:</p>
                <p>{", ".join(status)}</p>
              </body>
            </html>
            """
        
            if not email(session, admin_email, admin_subject, admin_body):
                return "Unable to send summary email to admin"
            return "failed: " + ", ".join(status)
            
        return "all emails sent"
    except Exception as e:
        return f"Error: {str(e)}" 
